# This is the config file for the documentation generator.

split.item.toc = "20"
# too long entries in the table of contents wrap around
# after this number of characters

doc.section = """
<div class="section" id="$sectionID">
  <h1><a class="toc-backref" href="#$sectionID">$sectionTitle</a></h1>
  <dl class="item">
    $content
  </dl>
</div>
"""

# Just a single item in the TOC (e.g. imports, exports)
doc.section.toc_item = """
<li>
  <a class="reference reference-toplevel" href="#$sectionID" id="$sectionTitleID">$sectionTitle</a>
</li>
"""

# This is a section (e.g. procs, types) in the TOC which gets turned into a drop down
doc.section.toc = """
<li>
  <details open>
    <summary><a class="reference reference-toplevel" href="#$sectionID" id="$sectionTitleID">$sectionTitle</a></summary>
    <ul class="simple simple-toc-section">
      $content
    </ul>
  </details>
</li>
"""

doc.section.toc2 = """
<ul class="simple nested-toc-section">$plainName
  $content
</ul>
"""

# Chunk of HTML emitted for each entry in the HTML table of contents.
# Available variables are:
# * $desc: the actual docstring of the item.
# * $header: the full version of name, including types, pragmas, tags, etc.
# * $header_plain: like header but without HTML (and without pragmas, tags, etc.),
#   for attribute embedding.
# * $itemID: numerical unique entry of the item in the HTML.
# * $itemSym: short symbolic name of the item for easier hyperlinking.
# * $itemSymEnc: quoted version for URLs or attributes.
# * $itemSymOrID: the symbolic name or the ID if that is not unique.
# * $itemSymOrIDEnc: quoted version for URLs or attributes.
# * $name: reduced name of the item.
# * $uniqueName: name with parameters for routine types or $name for others.
# * $seeSrc: generated HTML from doc.item.seesrc (if some switches are used).

doc.item = """
<div id="$itemSymOrID">
  <dt><pre>$header</pre></dt>
  <dd>
    $deprecationMsg
    $desc
    $seeSrc
  </dd>
</div>
"""

# A wrapper of a few overloaded `doc.item`s with the same basic name
# * $header_plain - see above
# * $overloadGroupName - the anchor for this whole group
# * $content - string containing `doc.item`s themselves
doc.item2 = """
<div id="$overloadGroupName">
  $content
</div>
"""

# Chunk of HTML emitted for each entry in the HTML table of contents.
# See doc.item for available substitution variables.

# This is used for TOC items which are not overloadable (e.g. types).
# `$header_plain` would be too verbose here, so we use $name.
doc.item.toc = """
<li><a class="reference" href="#$itemSymOrIDEnc" title="$header_plain">$name</a></li>
"""

# This is used for TOC items which are grouped by the same name (e.g. procs).
doc.item.tocTable = """
<li><a class="reference" href="#$itemSymOrIDEnc" title="$header_plain">$header_plain</a></li>
"""

# HTML rendered for doc.item's seeSrc variable. Note that this will render to
# the empty string if you don't pass anything through --git.url. Available
# substitutaion variables here are:
# * $commit: branch/commit to use in source link.
# * $devel: branch to use in edit link.
# * $path: relative path to the file being processed.
# * $line: line of the item in the original source file.
# * $url: whatever you did pass through the --git.url switch (which also
#   gets variables path/line replaced!)
doc.item.seesrc = """
<a href="${url}/tree/${commit}/${path}#L${line}" class="link-seesrc" target="_blank">Source</a>&nbsp;&nbsp;
<a href="${url}/edit/${devel}/${path}#L${line}" class="link-seesrc" target="_blank" >Edit</a>&nbsp;&nbsp;
"""

doc.deprecationmsg = """
<div class="deprecation-message">
  <b>$label</b> $message
</div>
"""

doc.toc = """
<ul class="simple simple-toc" id="toc-list">
  $content
</ul>
"""

doc.body_toc_groupsection = """
<div class="search-groupby">
  Group by:
  <select onchange="groupBy(this.value)">
    <option value="section">Section</option>
    <option value="type">Type</option>
  </select>
</div>
"""

@if boot:
# This is enabled with the "boot" directive to generate
# the compiler documentation.
# As a user, tweak the block below instead.
# You can add your own global-links entries
doc.body_toc_group = """
<div class="row">
  <div class="three columns">
    <div class="theme-select-wrapper">
      <label for="theme-select">Theme:&nbsp;</label>
      <select id="theme-select" onchange="setTheme(this.value)">
        <option value="auto">🌗 Match OS</option>
        <option value="dark">🌑 Dark</option>
        <option value="light">🌕 Light</option>
      </select>
    </div>
    <div id="global-links">
      <ul class="simple-boot">
        <li><a href="manual.html">Manual</a></li>
        <li><a href="lib.html">Standard library</a></li>
        <li> <a id="indexLink" href="$theindexhref">Index</a></li>
        <li><a href="compiler/$theindexhref">Compiler docs</a></li>
        <li><a href="https://nim-lang.github.io/fusion/theindex.html">Fusion docs</a></li>
        <li><a href="https://nim-lang.github.io/Nim/">devel</a>, <a href="https://nim-lang.org/documentation.html">stable</a></li>
      </ul>
    </div>
    <div id="searchInputDiv">
      Search: <input type="search" id="searchInput"
        oninput="search()" />
    </div>
    $body_toc_groupsection
    $tableofcontents
  </div>
  <div class="nine columns" id="content">
    $seeSrc
    <div id="tocRoot"></div>
    $deprecationMsg
    <p class="module-desc">$moduledesc</p>
    $content
  </div>
</div>
"""

@else
# keep in sink with other `doc.body_toc_group` or better, refactor
doc.body_toc_group = """
<div class="row">
  <div class="three columns">
    <div class="theme-select-wrapper">
      <label for="theme-select">Theme:&nbsp;</label>
      <select id="theme-select" onchange="setTheme(this.value)">
        <option value="auto">🌗 Match OS</option>
        <option value="dark">🌑 Dark</option>
        <option value="light">🌕 Light</option>
      </select>
    </div>
    <div id="global-links">
      <ul class="simple">
        <li><a id="indexLink" href="$theindexhref">Index</a></li>
      </ul>
    </div>
    <div id="searchInputDiv">
      Search: <input type="search" id="searchInput" oninput="search()"/>
    </div>
    <div>
      Group by:
      <select onchange="groupBy(this.value)">
        <option value="section">Section</option>
        <option value="type">Type</option>
      </select>
    </div>
    $tableofcontents
  </div>
  <div class="nine columns" id="content">
    $seeSrc
    <div id="tocRoot"></div>
    $deprecationMsg
    <p class="module-desc">$moduledesc</p>
    $content
  </div>
</div>
"""
@end

doc.body_toc %= "${doc.body_toc_group}" # should only be used for boot

doc.body_no_toc = """
$moduledesc
$content
"""

# $1 - number of listing in document, $2 - language (e.g. langNim), $3 - anchor
doc.listing_start = "<pre$3 class=\"listing\">"
doc.listing_end = "</pre>"

# * $analytics: Google analytics location, includes <script> tags
doc.file = """<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nimony Manual</title>
    <style>
        :root {
        color-scheme: light;
        --primary-background: #fff;
        --secondary-background: ghostwhite;
        --third-background: #e8e8e8;
        --info-background: #50c050;
        --warning-background: #c0a000;
        --error-background: #e04040;
        --border: #dde;
        --text: #222;
        --anchor: #07b;
        --anchor-focus: #607c9f;
        --input-focus: #1fa0eb;
        --strong: #3c3c3c;
        --hint: #9A9A9A;

        --keyword: #5e8f60;
        --identifier: #222;
        --comment: #484a86;
        --operator: #155da4;
        --punctuation: black;
        --other: black;
        --escapeSequence: #c4891b;
        --number: #252dbe;
        --literal: #a4255b;
        --program: #6060c0;
        --option: #508000;
        --raw-data: #a4255b;

        --clipboard-image-normal: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='color: black' fill='none' viewBox='0 0 24 24' stroke='currentColor'%3E %3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2' /%3E %3C/svg%3E");
        --clipboard-image-selected: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='color: black' viewBox='0 0 20 20' fill='currentColor'%3E %3Cpath d='M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z' /%3E %3Cpath d='M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z' /%3E %3C/svg%3E");
        --clipboard-image: var(--clipboard-image-normal)
        }

        [data-theme="dark"] {
        color-scheme: dark;
        --primary-background: #171921;
        --secondary-background: #1e202a;
        --third-background: #2b2e3b;
        --info-background: #008000;
        --warning-background: #807000;
        --error-background: #c03000;
        --border: #0e1014;
        --text: #fff;
        --anchor: #8be9fd;
        --anchor-focus: #8be9fd;
        --input-focus: #8be9fd;
        --strong: #bd93f9;
        --hint: #7A7C85;

        --keyword: #f8f8f2;
        --identifier: #f8f8f2;
        --comment: #ff79c6;
        --operator: #f8f8f2;
        --punctuation: #f8f8f2;
        --other: #f8f8f2;
        --escapeSequence: #bd93f9;
        --number: #f1fa8c;
        --literal: #f1fa8c;
        --program: #9090c0;
        --option: #90b010;
        --raw-data: #8be9fd;

        --clipboard-image-normal: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='color: lightgray' fill='none' viewBox='0 0 24 24' stroke='currentColor'%3E %3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2' /%3E %3C/svg%3E");
        --clipboard-image-selected: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='color: lightgray' viewBox='0 0 20 20' fill='currentColor'%3E %3Cpath d='M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z' /%3E %3Cpath d='M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z' /%3E %3C/svg%3E");
        --clipboard-image: var(--clipboard-image-normal);
        }

        @media (prefers-color-scheme: dark) {
        [data-theme="auto"] {
            color-scheme: dark;
            --primary-background: #171921;
            --secondary-background: #1e202a;
            --third-background: #2b2e3b;
            --info-background: #008000;
            --warning-background: #807000;
            --error-background: #c03000;
            --border: #0e1014;
            --text: #fff;
            --anchor: #8be9fd;
            --anchor-focus: #8be9fd;
            --input-focus: #8be9fd;
            --strong: #bd93f9;
            --hint: #7A7C85;

            --keyword: #ff79c6;
            --identifier: #f8f8f2;
            --comment: #6272a4;
            --operator: #ff79c6;
            --punctuation: #f8f8f2;
            --other: #f8f8f2;
            --escapeSequence: #bd93f9;
            --number: #bd93f9;
            --literal: #f1fa8c;
            --program: #9090c0;
            --option: #90b010;
            --raw-data: #8be9fd;

            --clipboard-image-normal: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='color: lightgray' fill='none' viewBox='0 0 24 24' stroke='currentColor'%3E %3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2' /%3E %3C/svg%3E");
            --clipboard-image-selected: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='color: lightgray' viewBox='0 0 20 20' fill='currentColor'%3E %3Cpath d='M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z' /%3E %3Cpath d='M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z' /%3E %3C/svg%3E");
            --clipboard-image: var(--clipboard-image-normal);
        }
        }


        span.DecNumber {
        color: var(--number); }

        span.BinNumber {
        color: var(--number); }

        span.HexNumber {
        color: var(--number); }

        span.OctNumber {
        color: var(--number); }

        span.FloatNumber {
        color: var(--number); }

        span.Identifier {
        color: var(--identifier); }

        span.Keyword {
        font-weight: 600;
        color: var(--keyword); }

        span.StringLit {
        color: var(--literal); }

        span.LongStringLit {
        color: var(--literal); }

        span.CharLit {
        color: var(--literal); }

        span.EscapeSequence {
        color: var(--escapeSequence); }

        span.Operator {
        color: var(--operator); }

        span.Punctuation {
        color: var(--punctuation); }

        span.Comment, span.LongComment {
        font-style: italic;
        font-weight: 400;
        color: var(--comment); }

        span.RegularExpression {
        color: darkviolet; }

        span.TagStart {
        color: darkviolet; }

        span.TagEnd {
        color: darkviolet; }

        span.option {
        font-weight: bold;
        font-family: "Source Code Pro", Monaco, Menlo, Consolas, "Courier New", monospace;
        color: var(--option); }

        span.Prompt {
        font-weight: bold;
        color: red; }

        span.ProgramOutput {
        font-weight: bold;
        color: #808080; }

        span.program {
        font-weight: bold;
        color: var(--program);
        text-decoration: underline;
        text-decoration-color: var(--hint);
        text-decoration-thickness: 0.05em;
        text-underline-offset: 0.15em; }

        span.Command, span.Rule, span.Hyperlink,
        span.Label, span.Reference, span.Other {
        color: var(--other); }

        /* Light theme color scheme (default) */
        :root {
            --bg-primary: #ffffff;      /* White background */
            --bg-secondary: #f8f9fa;    /* Light gray background */
            --third-background: #e8e8e8; /* Third level background */
            --text-primary: #2c3e50;    /* Dark blue-gray text */
            --text-secondary: #3498db;  /* Soft blue for highlights */
            --text-muted: #7f8c8d;      /* Muted gray for secondary text */
            --border-color: #ecf0f1;    /* Light gray border */
            --code-bg: #f8f9fa;         /* Light gray for code blocks */
            --code-border: #e9ecef;     /* Light gray for code borders */
            --accent-color: #2c3e50;    /* Soft red for accents */
            --string-color: #27ae60;    /* Green for strings */
            --keyword-color: #e74c3c;   /* Soft red for keywords */
            --comment-color: #95a5a6;   /* Muted gray for comments */
        }

        /* Dark theme color scheme */
        [data-theme="dark"] {
            --bg-primary: #002451;      /* Dark blue background */
            --bg-secondary: #00346e;    /* Slightly lighter blue */
            --third-background: transparent; /* Third level background */
            --text-primary: #ffffff;    /* White text */
            --text-secondary: #ffff00;  /* Yellow for captions and highlights */
            --text-muted: #b4b4b4;      /* Light gray for secondary text */
            --border-color: #1d3f53;    /* Darker blue border */
            --code-bg: var(--bg-primary);         /* Darker blue for code blocks */
            --code-border: #1d3f53;     /* Darker blue for code borders */
            --accent-color: #ffff00;    /* Soft red for accents */
            --string-color: #d1f1a9;    /* Light green for strings */
            --keyword-color: #ff9da4;   /* Soft red for keywords */
            --comment-color: #7285b7;   /* Muted blue for comments */
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Restore proper indentation for definition lists */
        dd {
            margin-left: 40px;
        }

        body {
            font-family: 'Segoe UI', 'Tahoma', 'Arial', sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            line-height: 1.6;
            font-size: 16px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header */
        header {
            background-color: var(--bg-secondary);
            border: 2px solid var(--border-color);
            padding: 20px;
            margin-bottom: 30px;
            text-align: center;
        }

        h1 {
            color: var(--text-secondary);
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .subtitle {
            color: var(--text-muted);
            font-size: 1.2em;
            font-style: italic;
        }

        /* Navigation */
        nav {
            background-color: var(--bg-secondary);
            border: 2px solid var(--border-color);
            padding: 15px;
            margin-bottom: 30px;
        }

        /* Navigation controls - always visible */
        .nav-controls {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
        }



        .nav-link {
            color: var(--text-primary);
            text-decoration: none;
            padding: 8px 12px;
            border-radius: 5px;
            background-color: var(--accent-color);
            border: 2px solid var(--accent-color);
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .nav-link:hover {
            background-color: var(--bg-primary);
            color: var(--accent-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        /* Hierarchical Navigation */
        .nav-hierarchy {
            display: none;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

        .nav-hierarchy.active {
            display: grid;
        }

        .nav-section {
            background-color: var(--code-bg);
            border: 2px solid var(--code-border);
            padding: 15px;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .nav-section:hover {
            border-color: var(--text-secondary);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .nav-section h3 {
            color: var(--text-secondary);
            margin-bottom: 10px;
            font-size: 1.1em;
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 5px;
        }

        .nav-section ul {
            list-style: none;
        }

        .nav-section li {
            margin-bottom: 5px;
        }

        .nav-section a {
            color: var(--text-primary);
            text-decoration: none;
            padding: 3px 8px;
            border-radius: 3px;
            transition: all 0.2s ease;
            display: block;
        }

        .nav-section a:hover {
            background-color: var(--text-secondary);
            color: var(--bg-primary);
        }

        /* Global links styling */
        #global-links a {
            color: var(--text-secondary);
            text-decoration: none;
            transition: all 0.2s ease;
        }

        #global-links a:hover {
            color: var(--accent-color);
            text-decoration: underline;
        }

        /* Minimap button */
        .nav-btn {
            background-color: var(--text-secondary);
            color: var(--bg-primary);
            border: 2px solid var(--text-secondary);
            padding: 10px 20px;
            font-weight: bold;
            cursor: pointer;
            border-radius: 5px;
            transition: all 0.3s ease;
            font-size: 1.1em;
        }

        .nav-btn:hover {
            background-color: var(--bg-primary);
            color: var(--text-secondary);
        }

        .nav-btn.expanded {
            background-color: var(--bg-primary);
            color: var(--text-secondary);
        }

        /* Main content */
        main {
            background-color: var(--bg-secondary);
            border: 2px solid var(--border-color);
            padding: 30px;
            margin-bottom: 30px;
        }

        h2 {
            color: var(--text-secondary);
            font-size: 1.8em;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid var(--border-color);
        }

        h3 {
            color: var(--text-secondary);
            font-size: 1.4em;
            margin: 25px 0 15px 0;
        }

        p {
            margin-bottom: 15px;
            text-align: justify;
        }

        /* Code blocks */
        pre {
            background-color: var(--code-bg);
            border: 2px solid var(--code-border);
            padding: 20px;
            margin: 20px 0;
            overflow-x: auto;
            border-radius: 5px;
        }

        code {
            font-family: 'Courier New', 'Consolas', 'Monaco', monospace;
            background-color: var(--code-bg);
            color: var(--text-secondary);
            padding: 2px 6px;
            border-radius: 3px;
            font-size: 0.9em;
        }

        pre code {
            background: none;
            padding: 0;
            color: var(--text-primary);
        }

        /* Inline code */
        .inline-code {
            background-color: var(--code-bg);
            color: var(--text-secondary);
            padding: 2px 6px;
            border-radius: 3px;
            font-family: 'Courier New', 'Consolas', 'Monaco', monospace;
            font-size: 0.9em;
        }

        /* Links */
        a {
            color: var(--text-secondary);
            text-decoration: none;
            transition: all 0.2s ease;
        }

        a:hover {
            color: var(--accent-color);
            text-decoration: underline;
        }

        a:visited {
            color: var(--text-secondary);
        }

        /* Lists */
        ul, ol {
            margin: 15px 0;
            padding-left: 30px;
        }

        li {
            margin-bottom: 8px;
        }

        /* Tables */
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background-color: var(--code-bg);
            border: 2px solid var(--code-border);
        }

        th, td {
            padding: 12px;
            text-align: left;
            border: 1px solid var(--code-border);
        }

        th {
            background-color: var(--bg-secondary);
            color: var(--text-secondary);
            font-weight: bold;
        }

        /* Footer */
        footer {
            background-color: var(--bg-secondary);
            border: 2px solid var(--border-color);
            padding: 20px;
            text-align: center;
            color: var(--text-muted);
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .nav-hierarchy {
                grid-template-columns: 1fr;
                gap: 10px;
            }

            .nav-section {
                padding: 10px;
            }

            h1 {
                font-size: 2em;
            }

            main {
                padding: 20px;
            }
        }

        /* Scrollbar styling */
        ::-webkit-scrollbar {
            width: 12px;
        }

        ::-webkit-scrollbar-track {
            background: var(--bg-primary);
        }

        ::-webkit-scrollbar-thumb {
            background: var(--border-color);
            border-radius: 6px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--text-secondary);
        }

        /* Right sidebar */
        .right-sidebar {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            width: 280px;
            max-height: calc(100vh - 40px);
            overflow-y: auto;
            background-color: var(--bg-secondary);
            border: 2px solid var(--accent-color);
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
        }

        .right-sidebar.collapsed {
            width: 60px;
            overflow: hidden;
        }

        /* Theme switcher button */
        .theme-switcher {
            width: 100%;
            background-color: var(--bg-secondary);
            border: none;
            border-bottom: 2px solid var(--border-color);
            color: var(--text-secondary);
            padding: 12px 15px;
            border-radius: 6px 6px 0 0;
            cursor: pointer;
            font-family: 'Segoe UI', 'Tahoma', 'Arial', sans-serif;
            font-size: 14px;
            font-weight: bold;
            transition: all 0.3s ease;
            text-align: center;
        }

        .theme-switcher:hover {
            background-color: var(--text-secondary);
            color: var(--bg-primary);
        }

        /* File overview section */
        .file-overview {
            padding: 15px;
            display: block;
        }

        .right-sidebar.collapsed .file-overview {
            display: none;
        }

        .file-overview h3 {
            color: var(--text-secondary);
            font-size: 16px;
            margin-bottom: 12px;
            padding-bottom: 8px;
            border-bottom: 1px solid var(--border-color);
        }

        .file-overview .current-section {
            background-color: var(--accent-color);
            color: var(--bg-primary);
            padding: 8px 12px;
            border-radius: 4px;
            margin-bottom: 10px;
            font-weight: bold;
            font-size: 14px;
        }

        .file-overview .section-list li a {
            color: inherit;
            text-decoration: none;
            display: block;
            font-size: 13px;
        }

        .file-overview .section-list li a:hover {
            color: inherit;
        }

        /* File overview section list styling */
        .file-overview .section-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .file-overview .section-list > li {
            margin-bottom: 6px;
            padding: 6px 8px;
            border-radius: 4px;
            background-color: var(--code-bg);
            border: 1px solid var(--code-border);
            transition: all 0.2s ease;
        }

        .file-overview .section-list > li:hover {
            background-color: var(--text-secondary);
            color: var(--bg-primary);
            cursor: pointer;
        }

        /* Nested list styling for hierarchy */
        .file-overview .section-list ul {
            list-style: none;
            padding: 0;
            margin: 8px 0 0 0;
        }

        .file-overview .section-list ul li {
            margin-bottom: 4px;
            padding: 4px 8px 4px 16px;
            border-radius: 3px;
            background-color: var(--bg-secondary);
            border: 1px solid var(--border-color);
            font-size: 12px;
            transition: all 0.2s ease;
        }

        .file-overview .section-list ul ul li {
            padding-left: 24px;
            font-size: 11px;
            background-color: var(--code-bg);
        }

        .file-overview .section-list ul li:hover {
            background-color: var(--text-secondary);
            color: var(--bg-primary);
            cursor: pointer;
        }

        /* Toggle button for sidebar */
        .sidebar-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1001;
            background-color: var(--accent-color);
            border: 2px solid var(--accent-color);
            color: var(--bg-primary);
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.3s ease;
            display: none;
        }

        .sidebar-toggle:hover {
            background-color: var(--bg-primary);
            color: var(--accent-color);
        }

        /* Responsive design for sidebar */
        @media (max-width: 768px) {
            .right-sidebar {
                top: 10px;
                right: 10px;
                width: 250px;
                max-height: calc(100vh - 20px);
            }

            .sidebar-toggle {
                top: 10px;
                right: 10px;
                padding: 6px 10px;
                font-size: 11px;
            }

            .right-sidebar.collapsed {
                width: 50px;
            }
        }

        /* Print styles - hide navigation and sidebar elements */
        @media print {
            /* Hide the right sidebar completely */
            .right-sidebar,
            .sidebar-toggle {
                display: none !important;
            }

            /* Hide navigation controls and hierarchy */
            .nav-controls,
            .nav-hierarchy {
                display: none !important;
            }

            /* Hide the entire nav element */
            nav {
                display: none !important;
            }

            /* Ensure main content takes full width */
            main {
                width: 100% !important;
                margin: 0 !important;
                padding: 20px !important;
                border: none !important;
                background: none !important;
            }

            /* Ensure container doesn't have max-width constraint */
            .container {
                max-width: none !important;
                padding: 0 !important;
            }

            /* Ensure header is properly styled for print */
            header {
                background: none !important;
                border: none !important;
                padding: 10px 0 !important;
                margin-bottom: 20px !important;
            }

            /* Ensure footer is properly styled for print */
            footer {
                background: none !important;
                border: none !important;
                padding: 10px 0 !important;
                margin-top: 20px !important;
            }

            /* Ensure code blocks are properly formatted for print */
            pre {
                background: #f5f5f5 !important;
                border: 1px solid #ccc !important;
                page-break-inside: avoid !important;
            }

            /* Ensure tables don't break across pages */
            table {
                page-break-inside: avoid !important;
            }

            /* Ensure headings don't break across pages */
            h1, h2, h3, h4, h5, h6 {
                page-break-after: avoid !important;
            }

            /* Remove shadows and decorative elements for print */
            * {
                box-shadow: none !important;
                text-shadow: none !important;
            }

            /* Ensure proper page breaks */
            .section {
                page-break-before: auto !important;
            }
        }
    </style>
</head>
<body>
    <!-- Right sidebar with theme switcher and file overview -->
    <div class="right-sidebar" id="rightSidebar">
        <button class="theme-switcher" onclick="toggleTheme()">🌙 Dark</button>
        <div class="file-overview">
            <div class="current-section" id="currentSection">Loading...</div>
        </div>
    </div>

    <!-- Toggle button for sidebar (shown when collapsed) -->
    <button class="sidebar-toggle" id="sidebarToggle" onclick="toggleSidebar()">📋</button>

    <div class="container">
        <header>
            <h1>NIMONY MANUAL</h1>
            <p class="subtitle">The Complete Guide to the programming language</p>
        </header>

        <nav>
            <div class="nav-controls">
                <button class="nav-btn" onclick="toggleNavigation()">🗺️ Navigation</button>
                <button class="nav-btn" onclick="scrollToSection('language-guide')">📚 Language Guide</button>
                <button class="nav-btn" onclick="scrollToSection('standard-library')">📚 Standard Library</button>
            </div>
            <div class="nav-hierarchy" id="navHierarchy">
                <div class="nav-section">
                    <ul class="section-list" id="sectionList">
                        <!-- Sections will be populated by JavaScript -->
                    </ul>
                </div>
            </div>
        </nav>

        <main>
      $content
        </main>

        <footer>
            <p>&copy; 2025 Andreas Rumpf. This manual is a work in progress.</p>
        </footer>
    </div>

    <script>
        // Theme switching functionality
        function toggleTheme() {
            const root = document.documentElement;
            const button = document.querySelector('.theme-switcher');

            if (root.getAttribute('data-theme') === 'dark') {
                // Switch to light theme
                root.removeAttribute('data-theme');
                button.textContent = '🌙 Dark';
                button.title = 'Switch to dark theme';
            } else {
                // Switch to dark theme
                root.setAttribute('data-theme', 'dark');
                button.textContent = '🌙 Light';
                button.title = 'Switch to light theme';
            }

            // Save preference to localStorage
            localStorage.setItem('nimony-theme', root.getAttribute('data-theme') || 'light');
        }

        // Sidebar toggle functionality
        function toggleSidebar() {
            const sidebar = document.getElementById('rightSidebar');
            const toggleBtn = document.getElementById('sidebarToggle');

            if (sidebar.classList.contains('collapsed')) {
                sidebar.classList.remove('collapsed');
                toggleBtn.style.display = 'none';
            } else {
                sidebar.classList.add('collapsed');
                toggleBtn.style.display = 'block';
            }

            // Save preference to localStorage
            localStorage.setItem('nimony-sidebar-collapsed', sidebar.classList.contains('collapsed'));
        }

        // Navigation toggle functionality
        function toggleNavigation() {
            const hierarchy = document.getElementById('navHierarchy');
            const button = document.querySelector('.nav-btn');

            if (hierarchy.classList.contains('active')) {
                hierarchy.classList.remove('active');
                button.textContent = '🗺️ Navigation';
                button.classList.remove('expanded');
            } else {
                hierarchy.classList.add('active');
                button.textContent = '🗺️ Hide Navigation';
                button.classList.add('expanded');
            }
        }

        // Scroll to section functionality
        function scrollToSection(sectionId) {
            const section = document.getElementById(sectionId);
            if (section) {
                section.scrollIntoView({ behavior: 'smooth' });
            }
        }

        // File overview functionality
        function updateFileOverview() {
            const sections = document.querySelectorAll('h1, h2, h3');
            const sectionList = document.getElementById('sectionList');
            const currentSection = document.getElementById('currentSection');

            if (!sectionList || !currentSection) return;

            // Clear existing list
            sectionList.innerHTML = '';

            // Create hierarchical structure
            const hierarchy = [];
            let currentH1 = null;
            let currentH2 = null;

            // Filter out the header h1
            const contentSections = Array.from(sections).filter(section => {
                return !(section.tagName === 'H1' && section.closest('header'));
            });

            contentSections.forEach((section, index) => {
                const sectionText = section.textContent.trim();
                const sectionId = section.id || `section-$${index}`;
                const tagName = section.tagName.toLowerCase();

                if (tagName === 'h1') {
                    currentH1 = {
                        text: sectionText,
                        id: sectionId,
                        children: []
                    };
                    hierarchy.push(currentH1);
                    currentH2 = null;
                } else if (tagName === 'h2') {
                    if (currentH1) {
                        currentH2 = {
                            text: sectionText,
                            id: sectionId,
                            children: []
                        };
                        currentH1.children.push(currentH2);
                    } else {
                        // H2 without parent H1
                        currentH2 = {
                            text: sectionText,
                            id: sectionId,
                            children: []
                        };
                        hierarchy.push(currentH2);
                    }
                } else if (tagName === 'h3') {
                    const h3Item = {
                        text: sectionText,
                        id: sectionId
                    };

                    if (currentH2) {
                        currentH2.children.push(h3Item);
                    } else if (currentH1) {
                        currentH1.children.push(h3Item);
                    } else {
                        // H3 without parent H1 or H2
                        hierarchy.push(h3Item);
                    }
                }
            });

            // Build nested HTML structure
            function createListItem(item) {
                const li = document.createElement('li');
                const a = document.createElement('a');

                a.href = `#$${item.id}`;
                a.textContent = item.text;
                a.title = item.text;

                // Add click handler for smooth scrolling
                a.addEventListener('click', function(e) {
                    e.preventDefault();
                    const targetSection = document.getElementById(item.id);
                    if (targetSection) {
                        targetSection.scrollIntoView({ behavior: 'smooth' });
                    }
                });

                li.appendChild(a);

                // Add nested list if there are children
                if (item.children && item.children.length > 0) {
                    const ul = document.createElement('ul');
                    item.children.forEach(child => {
                        ul.appendChild(createListItem(child));
                    });
                    li.appendChild(ul);
                }

                return li;
            }

            // Add all top-level items to the section list
            hierarchy.forEach(item => {
                sectionList.appendChild(createListItem(item));
            });

            // Update current section based on scroll position
            updateCurrentSection();
        }

        // Update current section based on scroll position
        function updateCurrentSection() {
            const sections = document.querySelectorAll('h1, h2, h3');
            const currentSection = document.getElementById('currentSection');

            if (!currentSection || sections.length === 0) return;

            const scrollPosition = window.scrollY + 100; // Offset for better detection

            let currentSectionText = 'Introduction';

            for (let i = sections.length - 1; i >= 0; i--) {
                const section = sections[i];
                const sectionTop = section.offsetTop;

                if (scrollPosition >= sectionTop) {
                    currentSectionText = section.textContent.trim();
                    break;
                }
            }

            currentSection.textContent = currentSectionText;
        }

        // Intersection Observer for better current section detection
        function setupIntersectionObserver() {
            const sections = document.querySelectorAll('h1, h2, h3');
            const currentSection = document.getElementById('currentSection');

            if (!currentSection || sections.length === 0) return;

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        currentSection.textContent = entry.target.textContent.trim();
                    }
                });
            }, {
                rootMargin: '-20% 0px -70% 0px'
            });

            sections.forEach(section => observer.observe(section));
        }

        // Load saved preferences and initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Load saved theme preference
            const savedTheme = localStorage.getItem('nimony-theme');
            const button = document.querySelector('.theme-switcher');

            if (savedTheme === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark');
                button.textContent = '🌙 Light';
                button.title = 'Switch to light theme';
            } else {
                button.textContent = '🌙 Dark';
                button.title = 'Switch to dark theme';
            }

            // Load saved sidebar preference
            const savedSidebarCollapsed = localStorage.getItem('nimony-sidebar-collapsed');
            const sidebar = document.getElementById('rightSidebar');
            const toggleBtn = document.getElementById('sidebarToggle');

            if (savedSidebarCollapsed === 'true') {
                sidebar.classList.add('collapsed');
                toggleBtn.style.display = 'block';
            }

            // Initialize file overview
            updateFileOverview();
            setupIntersectionObserver();

            // Update current section on scroll
            window.addEventListener('scroll', updateCurrentSection);
        });
    </script>
</body>
</html>
"""
